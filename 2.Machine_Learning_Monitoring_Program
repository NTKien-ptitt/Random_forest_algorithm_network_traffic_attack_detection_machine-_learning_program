import subprocess
import time
import os
import pandas as pd
from joblib import load
from datetime import datetime

# ========================== 1. T·∫£i m√¥ h√¨nh h·ªçc m√°y ==========================
# T·∫£i m√¥ h√¨nh d·ª± ƒëo√°n t·ª´ ƒë∆∞·ªùng d·∫´n ƒë√£ l∆∞u
model = load('C:\\Users\\KIEN\\Desktop\\wireshark\\model.pkl')

# ========================== 2. Thi·∫øt l·∫≠p m√¥i tr∆∞·ªùng v√† c·∫•u h√¨nh ==========================
# Chuy·ªÉn ƒë·∫øn th∆∞ m·ª•c c√†i ƒë·∫∑t Wireshark
os.chdir("C:\\Program Files\\Wireshark")

# L·ªánh tshark ƒë·ªÉ thu th·∫≠p d·ªØ li·ªáu m·∫°ng
command_tshark = r"tshark -i \Device\NPF_{08DB9678-8129-4C96-B2AA-216B0F27FAF4} -w E:\dataset\model\nnn.pcap -F pcap"

# Chuy·ªÉn ƒë·∫øn th∆∞ m·ª•c c√†i ƒë·∫∑t CICFlowMeter
os.chdir("C:\\Users\\KIEN\\Downloads\\cicflowmeter-4\\CICFlowMeter-4.0\\bin")

# L·ªánh ƒë·ªÉ ch·∫°y CICFlowMeter
command_cfm = "cfm.bat E:\\dataset\\model\\nnn.pcap E:\\dataset\\model"

# T·ª´ ƒëi·ªÉn l∆∞u th·ªùi gian ph√°t hi·ªán ƒë·∫ßu ti√™n
first_detection_time = {}

# ========================== 3. Kh·ªüi ƒë·ªông thu th·∫≠p d·ªØ li·ªáu m·∫°ng v·ªõi Wireshark ==========================
# Kh·ªüi ch·∫°y tshark trong m·ªôt ti·∫øn tr√¨nh ƒë·ªôc l·∫≠p
process_tshark = subprocess.Popen(command_tshark, shell=True)

# ========================== 4. V√≤ng l·∫∑p gi√°m s√°t v√† x·ª≠ l√Ω d·ªØ li·ªáu ==========================
try:
    while True:
        # ========================== 5. Ph√¢n t√≠ch d·ªØ li·ªáu m·∫°ng b·∫±ng CICFlowMeter ==========================
        # Ch·∫°y CICFlowMeter ƒë·ªÉ ph√¢n t√≠ch d·ªØ li·ªáu
        subprocess.run(command_cfm, shell=True)

        # ========================== 6. X·ª≠ l√Ω v√† chu·∫©n b·ªã d·ªØ li·ªáu ƒë·∫ßu v√†o cho m√¥ h√¨nh ==========================
        # Ki·ªÉm tra xem file k·∫øt qu·∫£ ƒë√£ ƒë∆∞·ª£c t·∫°o ch∆∞a
        output_file = 'E:\\dataset\\model\\nnn.pcap_Flow.csv'
        if os.path.exists(output_file):
            # ƒê·ªçc d·ªØ li·ªáu t·ª´ file CSV k·∫øt qu·∫£
            data = pd.read_csv(output_file)
            network_info = data[['Src IP', 'Dst IP']]

            # Ch·ªçn c√°c c·ªôt c·∫ßn thi·∫øt v√† lo·∫°i b·ªè nh√£n 'Label'
            features = [
                'Src Port', 'Dst Port', 'Flow Duration', 'TotLen Fwd Pkts', 'Fwd Pkt Len Max', 
                'Flow Byts/s', 'Flow Pkts/s', 'Flow IAT Mean', 'Flow IAT Max', 'Bwd Pkt Len Mean', 
                'FIN Flag Cnt', 'SYN Flag Cnt', 'PSH Flag Cnt', 'ACK Flag Cnt', 'Down/Up Ratio', 
                'Subflow Fwd Byts', 'Subflow Fwd Pkts', 'Label'
            ]
            data = data[features].drop('Label', axis=1)

            # ========================== 7. D·ª± ƒëo√°n t·∫•n c√¥ng m·∫°ng ==========================
            # D·ª± ƒëo√°n l·ªõp t·∫•n c√¥ng
            predictions = model.predict(data)
            print("\n============================ D·ª∞ ƒêO√ÅN ============================")

            # Ph√¢n lo·∫°i k·∫øt qu·∫£ d·ª± ƒëo√°n
            unique_predictions = set(predictions)
            attack_labels = unique_predictions - {"Normal"}  # Lo·∫°i nh√£n "Normal"

            # ========================== 8. C·∫£nh b√°o v√† ghi nh·∫≠n t·∫•n c√¥ng ==========================
            # Hi·ªÉn th·ªã k·∫øt qu·∫£
            if attack_labels:
                for attack in attack_labels:
                    if attack not in first_detection_time:
                        # L∆∞u th·ªùi gian ph√°t hi·ªán ƒë·∫ßu ti√™n n·∫øu ch∆∞a t·ªìn t·∫°i
                        first_detection_time[attack] = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

                # Hi·ªÉn th·ªã th√¥ng b√°o c·∫£nh b√°o
                print("‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è  [C·∫¢NH B√ÅO] - Ph√°t hi·ªán t·∫•n c√¥ng: ‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è")
                for attack, detection_time in first_detection_time.items():
                    print(f"üîé  Nh√£n: {attack} - Th·ªùi gian ph√°t hi·ªán: {detection_time}")
            else:
                print(f"‚úÖ  [AN TO√ÄN] - Kh√¥ng ph√°t hi·ªán t·∫•n c√¥ng (Normal) l√∫c {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}‚úÖ")

            print("==================================================================")

        # D·ª´ng 10 gi√¢y tr∆∞·ªõc khi ti·∫øp t·ª•c
        time.sleep(10)
except KeyboardInterrupt:
    # ========================== 9. X·ª≠ l√Ω d·ª´ng ch∆∞∆°ng tr√¨nh ==========================
    print("Ch∆∞∆°ng tr√¨nh ƒë√£ b·ªã d·ª´ng b·ªüi ng∆∞·ªùi d√πng.")
